{
	"info": {
		"_postman_id": "9a9364ae-c3ef-43bf-97bf-dca04859d826",
		"name": "EntrenadorTests.postman_collection",
		"description": "ColecciÃ³n de pruebas sobre el recurso Entrenador.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25565466"
	},
	"item": [
		{
			"name": "createEntrenador",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"entrenador_id_1\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Elaina Jencken\",\r\n  \"foto\": \"http://dummyimage.com/195x100.png/ff4444/ffffff\",\r\n  \"trayectoria\": \"Multi-tiered fresh-thinking leverage\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/entrenadores",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"entrenadores"
					]
				},
				"description": "Crea un entrenador en la base de datos con los atributos dados"
			},
			"response": [
				{
					"name": "createEntrenador",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/entrenadores",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"entrenadores"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"nombre\": \"Elaina Jencken\",\n    \"foto\": \"http://dummyimage.com/195x100.png/ff4444/ffffff\",\n    \"trayectoria\": \"Multi-tiered fresh-thinking leverage\"\n}"
				}
			]
		},
		{
			"name": "getEntrenadores",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Numero de entrenadores > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/entrenadores",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"entrenadores"
					]
				},
				"description": "Devuelve la lista de todos los entrenadores en la base de datos."
			},
			"response": [
				{
					"name": "getEntrenadores",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/entrenadores",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"entrenadores"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"id\": 1,\n        \"nombre\": \"Cyril Behling\",\n        \"foto\": \"http://dummyimage.com/106x100.png/cc0000/ffffff\",\n        \"trayectoria\": \"Virtual optimizing support\",\n        \"actividad\": null\n    }\n]"
				}
			]
		},
		{
			"name": "getEntrenadorById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/entrenadores/{{entrenador_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"entrenadores",
						"{{entrenador_id_1}}"
					]
				},
				"description": "Devuelve el entrenador con el id dado."
			},
			"response": [
				{
					"name": "getEntrenadorById",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/entrenadores/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"entrenadores",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Vary",
							"value": "Access-Control-Request-Method"
						},
						{
							"key": "Vary",
							"value": "Access-Control-Request-Headers"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Thu, 02 Mar 2023 03:33:19 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": 1,\n  \"nombre\": \"Cyril Behling\",\n  \"foto\": \"http://dummyimage.com/106x100.png/cc0000/ffffff\",\n  \"trayectoria\": \"Virtual optimizing support\",\n  \"actividad\": null\n}"
				}
			]
		},
		{
			"name": "getInavlidEntrenador",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"\r",
							"pm.test(\"Status code is 404\", function(){\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/entrenadores/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"entrenadores",
						"0"
					]
				},
				"description": "Devuelve error 404 not found."
			},
			"response": [
				{
					"name": "getInavlidEntrenador",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/entrenadores/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"entrenadores",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"apierror\": {\n        \"status\": \"NOT_FOUND\",\n        \"timestamp\": \"21-02-2023 10:01:09\",\n        \"message\": \"El entrenador con el id dado no fue encontrado\"\n    }\n}"
				}
			]
		},
		{
			"name": "updateinvalidEntrenador",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"\r",
							"pm.test(\"Status code is 404\", function(){\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Elaina Jencken\",\r\n  \"foto\": \"http://dummyimage.com/195x100.png/ff4444/ffffff\",\r\n  \"trayectoria\": \"Mucha trayectoria\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/entrenadores/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"entrenadores",
						"0"
					]
				},
				"description": "Devuelve error 404 not found."
			},
			"response": [
				{
					"name": "updateinvalidEntrenador",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/entrenadores/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"entrenadores",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\r\n    \"apierror\": {\r\n        \"status\": \"NOT_FOUND\",\r\n        \"timestamp\": \"21-02-2023 10:01:09\",\r\n        \"message\": \"El entrenador con el id dado no fue encontrado\"\r\n    }\r\n}"
				}
			]
		},
		{
			"name": "updateEntrenador",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Elaina Jencken2\",\r\n  \"foto\": \"http://dummyimage.com/195x100.png/ff4444/ffffff\",\r\n  \"trayectoria\": \"Multi-tiered fresh-thinking leverage\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/entrenadores/{{entrenador_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"entrenadores",
						"{{entrenador_id_1}}"
					]
				},
				"description": "Actualiza al entrenador con el id dado."
			},
			"response": [
				{
					"name": "updateEntrenador",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/entrenadores/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"entrenadores",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"nombre\": \"Elaina Jencken\",\n    \"foto\": \"http://dummyimage.com/195x100.png/ff4444/ffffff\",\n    \"trayectoria\": \"Mucha trayectoria\"\n}"
				}
			]
		},
		{
			"name": "deleteInvalidEntrenador",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"\r",
							"pm.test(\"Status code is 404\", function(){\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/entrenadores/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"entrenadores",
						"0"
					]
				},
				"description": "Devuelve error 404 not found."
			},
			"response": [
				{
					"name": "deleteInvalidEntrenador",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/entrenadores/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"entrenadores",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\r\n    \"apierror\": {\r\n        \"status\": \"NOT_FOUND\",\r\n        \"timestamp\": \"21-02-2023 10:05:19\",\r\n        \"message\": \"El entrenador con el id dado no fue encontrado\"\r\n    }\r\n}"
				}
			]
		},
		{
			"name": "deleteEntrenador",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/entrenadores/{{entrenador_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"entrenadores",
						"{{entrenador_id_1}}"
					]
				},
				"description": "Borra al entrenador con el id dado, devuelve el cÃ³digo 204."
			},
			"response": [
				{
					"name": "deleteEntrenador",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/entrenadores/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"entrenadores",
								""
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		}
	]
}