{
	"info": {
		"_postman_id": "20dd525b-3f61-47d8-819e-2220994d9c0e",
		"name": "ServicioSedeTests.postman_collection",
		"description": "Colección de pruebas sobre el recurso ServicioSede.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25507796"
	},
	"item": [
		{
			"name": "createSede",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setGlobalVariable(\"new_id_sede\",data.id);\r",
							"tests[\"No genera error en el Post\"] = responseCode.code === 201;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Central\",\r\n  \"direccion\": \"22 st\",\r\n  \"telefono\": \"679493\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/sedes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"sedes"
					]
				},
				"description": "Crea una nueva sede. El Id es inicializado por la BD y se debe ver en la respuesta.\n\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\n\n**Código http esperado: 200**"
			},
			"response": [
				{
					"name": "createSede",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/sedes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"sedes"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n    \"id\": 1,\r\n    \"nombre\": \"Central\",\r\n    \"direccion\": \"22 st\",\r\n    \"telefono\": \"679493\"\r\n}"
				}
			]
		},
		{
			"name": "createSede2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setGlobalVariable(\"new_id_sede2\",data.id);\r",
							"tests[\"No genera error en el Post\"] = responseCode.code === 201;\r",
							"console.log(data.id);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Bacata\",\r\n  \"direccion\": \"13 st\",\r\n  \"telefono\": \"8242245\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/sedes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"sedes"
					]
				},
				"description": "Crea una nueva sede. El Id es inicializado por la BD y se debe ver en la respuesta.\n\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\n\n**Código http esperado: 200**"
			},
			"response": [
				{
					"name": "createSede2",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/sedes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"sedes"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n  \"id\": 2,\r\n  \"nombre\": \"Bacata\",\r\n  \"direccion\": \"13 st\",\r\n  \"telefono\": \"8242245\"\r\n}"
				}
			]
		},
		{
			"name": "createServicio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setGlobalVariable(\"new_id_servicio\",data.id);\r",
							"tests[\"No genera error en el Post\"] = responseCode.code === 201;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"servicio\": \"Acondicionamiento\",\r\n  \"disponible\": true,\r\n  \"sede\": { \"id\": {{new_id_sede}} }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/servicios",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"servicios"
					]
				},
				"description": "Crea un nuevo servicio. El Id es inicializado por la BD y se debe ver en la respuesta.\n\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\n\n**Código http esperado: 200**"
			},
			"response": [
				{
					"name": "createServicio",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/servicios",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"servicios"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n    \"id\": 1,\r\n    \"servicio\": \"Acondicionamiento\",\r\n    \"disponible\": true,\r\n    \"Sede\": {\r\n        \"id\": 1,\r\n        \"nombre\": \"Central\",\r\n        \"direccion\": \"22 st\",\r\n        \"telefono\": \"679493\"\r\n    }\r\n}"
				}
			]
		},
		{
			"name": "replaceSede",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(responseBody);\r",
							"var data = JSON.parse(responseBody);\r",
							"tests[\"No genera error en el Put\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": {{new_id_sede2}},\r\n    \"nombre\": \"Bacata23\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/servicios/{{new_id_servicio}}/sede",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"servicios",
						"{{new_id_servicio}}",
						"sede"
					]
				},
				"description": "Actualiza la sede de un servicio existente. Se envían los Ids de las entidades a asociar en la URL de la petición.\n\n**Código http esperado: 200**"
			},
			"response": [
				{
					"name": "replaceSede",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/servicios/{{new_id_servicio}}/sede",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"servicios",
								"{{new_id_servicio}}",
								"sede"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "replaceInvalidSede1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No actualiza con sede que no existe\"] = responseCode.code === 404;\r",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"No se encontró la sede\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/servicios/{{new_id_servicio}}/sede",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"servicios",
						"{{new_id_servicio}}",
						"sede"
					]
				},
				"description": "Asocia una sede que no existe a un servicio.\n\nPara la prueba se verifica que se genera el error y el mensaje \"No se encontró la sede\"\n\n**Código HTTP esperado: 404**"
			},
			"response": [
				{
					"name": "replaceInvalidSede1",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/servicios/{{new_id_servicio}}/sede",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"servicios",
								"{{new_id_servicio}}",
								"sede"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "replaceInvalidSede2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No actualiza con un servicio que no existe\"] = responseCode.code === 404;\r",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"No se encontró el servicio\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"nombre\":\"bacata33\",\r\n\t\"id\":{{new_id_sede}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/servicios/0/sede",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"servicios",
						"0",
						"sede"
					]
				},
				"description": "Asocia una sede a un servicio que no existe.\n\nPara la prueba se verifica que se genera el error y el mensaje \"No se encontró el servicio\".\n\n**Código HTTP esperado: 404**"
			},
			"response": [
				{
					"name": "replaceInvalidSede2",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/servicios/0/sede",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"servicios",
								"0",
								"sede"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "deleteServicio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/servicios/{{new_id_servicio}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"servicios",
						"{{new_id_servicio}}"
					]
				},
				"description": "Borra un servicio. Se envía el id del servicio creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": [
				{
					"name": "deleteServicio",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "deleteSede",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/sedes/{{new_id_sede}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"sedes",
						"{{new_id_sede}}"
					]
				},
				"description": "Borra una sede. Se envía el id de la sede creada en la primera petición.\n\n**Código HTTP esperado: 204**"
			},
			"response": [
				{
					"name": "deleteSede",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sedes/{{new_id_sede}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sedes",
								"{{new_id_sede}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "deleteSede2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/sedes/{{new_id_sede2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"sedes",
						"{{new_id_sede2}}"
					]
				},
				"description": "Borra una sede. Se envía el id de la sede2 creada en la segunda petición.\n\n**Código HTTP esperado: 204**"
			},
			"response": [
				{
					"name": "deleteSede2",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sedes/{{new_id_sede2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sedes",
								"{{new_id_sede2}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	]
}